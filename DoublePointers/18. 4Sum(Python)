class Solution:
    def fourSum(self, nums: List[int], target: int) -> List[List[int]]:
        n = len(nums)
        res = []
        if n < 4:
            return res
        nums.sort()
        for a in range(n):
            if a > 0 and nums[a] == nums[a-1]:
                continue
            for b in range(a+1, n):
                #b need to larger than a + 1 instead of 0, otherwise you will delete some correct situation
                #[2,2,2,2] target 8 ==> [] while correct answer is [2,2,2,2]
                if b > a+1 and nums[b] == nums[b-1]:
                    continue
                c, d = b+1 , n-1
                while c < d:
                    if nums[a] + nums[b] + nums[c] + nums[d] == target:
                        res.append([nums[a], nums[b], nums[c], nums[d]])
                        while c < d and nums[c] == nums[c+1]:
                            c+=1
                        while c < d and nums[d] == nums[d-1]:
                            d-=1
                        c+=1
                        d-=1
                    elif nums[a] + nums[b] + nums[c] + nums[d] > target:
                        d -= 1
                    else:
                        c += 1
        return res
