class Solution {
    public int minPathSum(int[][] grid) {
        //System.out.println(grid[0].length);
        int rowlen = grid.length;
        int collen = grid[0].length;
        if(rowlen == 0 ){
            return 0;
        }
        int[][] dp = new int[rowlen][collen];
        dp[0][0] = grid[0][0];
        //System.out.println(dp[0][2]);
        for(int i = 0; i<rowlen; i++){
            for(int j = 0; j < collen; j++){
                if( j > 0 && i == 0 ){
                    dp[i][j] = dp[i][j-1] + grid[i][j];
                }else if( i> 0 && j == 0 ){
                    dp[i][j] = dp[i-1][j] + grid[i][j];
                }else if( i > 0 && j > 0){
                    dp[i][j] = Math.min(dp[i-1][j], dp[i][j-1])+grid[i][j];
                }
            }
        }
        return dp[rowlen-1][collen-1];
    }
}
