class Solution {
    public int coinChange(int[] coins, int amount) {
        int[] dp = new int[amount+1];
        //Important give large value to dp, so that we can use Math.min
        Arrays.fill(dp, amount+1);
        dp[0] = 0;
        for(int i = 0; i< coins.length; i++){
            //Because complete knapsack problem do not need to consider the number of each item, use positive sequence
            for(int j = coins[i]; j <= amount; j++){
                    dp[j] = Math.min(dp[j],dp[j-coins[i]]+1);
            }
        }
        return (dp[amount] == amount+1)? -1: dp[amount];
    }
}
