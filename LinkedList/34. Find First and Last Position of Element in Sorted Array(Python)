class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:
        if len(nums) == 0:
            return [-1, -1]
        def binarySearch(nums, target, startOrEnd):
            l, r = 0, len(nums)-1
            while l <= r:
                mid = l + (r - l)//2
                if nums[mid] < target:
                    l = mid + 1
                elif nums[mid] > target:
                    r = mid - 1
                else:
                    if startOrEnd:
                        if mid > 0 and nums[mid-1] == nums[mid]:
                            r = mid -1
                        else:
                            return mid
                    else:
                        if mid < len(nums)-1 and nums[mid+1] == nums[mid]:
                            l = mid + 1
                        else:
                            return mid
            return -1
        
        start = binarySearch(nums, target, True)
        end = binarySearch(nums, target, False)
        
        if start<=end and end <= len(nums) and start >= 0 and nums[start] == target and nums[end] == target:
            return [start, end]
        return [-1, -1]
