class RandomizedSet:
    #data structure
    #https://leetcode-cn.com/problems/insert-delete-getrandom-o1/solution/tu-jie-chang-shu-shi-jian-cha-ru-shan-chu-he-huo-q/
    def __init__(self):
        """
        Initialize your data structure here.
        """
        #in orde to keep O(1), we have to use two; if only use dict, then get random will be O(n)
        #if just using list then find whether exist will be O(n)
        self.myList = []
        self.myDict = {}

    def insert(self, val: int) -> bool:
        """
        Inserts a value to the set. Returns true if the set did not already contain the specified element.
        """
        if val in self.myDict:
            return False
        self.myDict[val] = len(self.myList)
        self.myList.append(val)
        return True
        

    def remove(self, val: int) -> bool:
        """
        Removes a value from the set. Returns true if the set contained the specified element.
        """
        if val not in self.myDict:
            return False
        #remove the input element and move last element to that value's position
        last_ele, idx = self.myList[-1], self.myDict[val]
        self.myList[idx], self.myDict[last_ele] = last_ele, idx
        self.myList.pop()
        del self.myDict[val]
        return True

    def getRandom(self) -> int:
        """
        Get a random element from the set.
        """
        return random.choice(self.myList)


# Your RandomizedSet object will be instantiated and called as such:
# obj = RandomizedSet()
# param_1 = obj.insert(val)
# param_2 = obj.remove(val)
# param_3 = obj.getRandom()
