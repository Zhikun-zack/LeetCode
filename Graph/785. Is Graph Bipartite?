class Solution {
    //https://leetcode-cn.com/problems/is-graph-bipartite/solution/bfs-dfs-bing-cha-ji-san-chong-fang-fa-pan-duan-er-/
    public boolean isBipartite(int[][] graph) {
        int[] visited = new int[graph.length];
        for(int i = 0; i<graph.length; i++){
            if(visited[i] == 0 && !dfs(graph, i, 1, visited)){
                return false;
            }
        }
        return true;
    }

    public boolean dfs(int[][] graph, int i, int color, int[] visited){
        if(visited[i] != 0){
            return visited[i] == color;
        }

        visited[i] = color;
        for(int j : graph[i]){
            if(!dfs(graph, j, -color, visited)){
                return false;
            }
        }
        return true;
    }
}
