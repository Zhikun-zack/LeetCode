class Solution {
    public boolean canPlaceFlowers(int[] flowerbed, int n) {
        int len = flowerbed.length;
        for(int i = 0; i < len; i++){
            //IMPORTANT!!! i == 0 and flowerbed[i-1]'s order is important!!!!!
            //if(flowerbed[i] == 0 && (flowerbed[i+1] == 0 || i == len-1) && (flowerbed[i-1] == 0 || i == 0))
            //This will meet error when i ==0 or when i == len-1, because flowerbed[i-1] and flowerbed[i+1] will be executed first 
            if(flowerbed[i] == 0 && (i == len-1|| flowerbed[i+1] == 0) && (i == 0 || flowerbed[i-1] == 0 )){
                n--;
                //just incase when possible place to plant flower is larger than n
                if(n <= 0)
                    return true;
                flowerbed[i] = 1;
            }
        }
        //just use this is ok, return value will be boolean
        return n <= 0;
    }
}
