/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    HashMap<Integer, Integer> map;
    int target;
    public int pathSum(TreeNode root, int targetSum) {
        map = new HashMap<>();
        map.put(0, 1);
        target = targetSum;
        return rec(root, 0);
    }   

    public int rec(TreeNode root, int key){
        if(root == null){
            return 0;
        }
        int res = 0;
        key += root.val;

        res += map.getOrDefault(key - target, 0);
        map.put(key, map.getOrDefault(key, 0) + 1);
        
        int l = rec(root.left, key);
        int r = rec(root.right, key);

        map.put(key, map.get(key) - 1);
        res = res + l + r;
        return res;
    }
}
