/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    /*
    Tree

    From bottom to top

    T Com On
    S Com On
    */
    public boolean isBalanced(TreeNode root) {
        return height(root) >= 0;
    }

    public int height(TreeNode root){
        if(root == null) return 0;

        if(height(root.left) == -1 || height(root.right) == -1 || Math.abs(height(root.left) - height(root.right)) > 1){
            return -1;
        }else{
            return Math.max(height(root.left), height(root.right)) + 1;
        } 
    }
}
