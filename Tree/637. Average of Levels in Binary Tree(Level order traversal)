/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    /*
    Level order traversal
    */
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> res = new ArrayList<>();
        Deque<TreeNode> q = new LinkedList<>();
        q.offer(root);
        int size = 0;
        while(!q.isEmpty()){
            size = q.size();
            double sum = 0;
            double count = 0;
            for(int i = 0; i < size; i++){
                TreeNode node = q.poll();
                
                sum += node.val;
                count++;
                if(node.left != null){
                    q.offer(node.left);
                    //System.out.println("value is"+ node.left.val);
                }
                if(node.right != null){
                    q.offer(node.right);
                    //System.out.println("value is"+ node.right.val);
                }
            }
            //System.out.println("sum is" + sum);
            //System.out.println("count is" + count);
            res.add(sum/count);
        }
        return res;
    }
}
