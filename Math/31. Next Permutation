class Solution:
    def nextPermutation(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        n = len(nums)
        if n == 1: return
        i=n-2
        #start from the end, find the element which less than its next and closest to right most
        while i >= 0 and nums[i] >= nums[i+1]:
            i-=1
        #when i == -1, which means the whole array is in decending order, just start to reverse order, don't need to exchange the i and j
        if i >= 0:
            j = n - 1
            #find the element which has the smallest value in all the elements which are larger than the element i we found 
            while j >= 0 and nums[i] >= nums[j]:
                j -= 1
            nums[i], nums[j] = nums[j], nums[i]
        
        #all the array left is in a decending order so you just need to reverse it to ascending order
        l, r = i+1, n-1
        while l < r:
            nums[l], nums[r] = nums[r], nums[l]
            l+=1
            r-=1
#https://leetcode-cn.com/problems/next-permutation/solution/xia-yi-ge-pai-lie-by-leetcode-solution/
